name: Build Release
on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Publish
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-11.0
            target: "x86_64-apple-darwin"
            secondary: "aarch64-apple-darwin"
          - os: ubuntu-latest
            target: "x86_64-unknown-linux-gnu"
            secondary: "x86_64-pc-windows-gnu"
    steps:
      - uses: actions/checkout@v2
      - name: Set Release Version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Install Rust beta
        uses: actions-rs/toolchain@v1
        with:
          toolchain: beta
          default: true
          target: ${{ matrix.secondary }} # This is in addition to the native target
          profile: minimal
      - name: Install Windows linker
        id: install_gcc_windows
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install gcc-mingw-w64 &&
          printf "[target.$WIN]\nlinker = \"x86_64-w64-mingw32-gcc\"" >> ~/.cargo/config
      - name: Build for ${{ matrix.target }}
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Build for ${{ matrix.secondary }}
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.secondary }}
      - name: Rename binaries
        id: rename_binaries
        run: |
          mv target/release/badlogvis target/release/badlogvis-${{ matrix.target }}
          if [[ -f target/${{ matrix.secondary }}/release/badlogvis.exe ]]; then
            mv target/${{ matrix.secondary }}/release/badlogvis.exe target/release/badlogvis-${{ matrix.secondary }}.exe
          else
            mv target/${{ matrix.secondary }}/release/badlogvis target/release/badlogvis-${{ matrix.secondary }}
          fi
      - name: Publish release with binaries
        id: publish_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: badlogvis ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false
          files: |
            ./target/release/badlogvis-*

